services:
  chat:
    image: ollama/ollama:latest
    container_name: ollama-chat
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    environment:
      - OLLAMA_NUM_PARALLEL=4
      - OLLAMA_KEEP_ALIVE=30m
      - OLLAMA_HOST=0.0.0.0:11434
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/version"]
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G
    restart: unless-stopped

  model-setup:
    image: curlimages/curl:latest
    container_name: ollama-model-setup
    entrypoint: ["sh", "-c"]
    command: |
      "while ! curl -s --fail http://chat:11434/api/version; do
        echo 'Waiting for Ollama API to be available...'
        sleep 2
      done &&
      echo 'Pulling model: ${OLLAMA_MODEL:-phi3:mini}' &&
      curl -X POST http://chat:11434/api/pull -d '{\"name\":\"${OLLAMA_MODEL:-phi3:mini}\"}' &&
      echo 'Model setup complete'"
    depends_on:
      chat:
        condition: service_healthy
    environment:
      - OLLAMA_MODEL=${OLLAMA_MODEL:-phi3:mini}

  app:
    build: .
    container_name: voice-app
    ports:
      - "8000:8000"
    depends_on:
      model-setup:
        condition: service_completed_successfully
    environment:
      - OLLAMA_HOST=http://chat:11434
      - OLLAMA_MODEL=${OLLAMA_MODEL:-phi3:mini}
      - OLLAMA_SYSTEM_PROMPT=${OLLAMA_SYSTEM_PROMPT:-}
      - PIPER_VOICE=en-us-ryan-low
      - WHISPER_MODEL=tiny
      - LOG_LEVEL=DEBUG
      - MAX_RETRIES=10
      - RETRY_DELAY=1.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    restart: unless-stopped

volumes:
  ollama-data: 